name: Tests and Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run tests with coverage
      run: |
        pytest --cov=src --cov-report=html --cov-report=xml --cov-report=term-missing --junitxml=pytest-results.xml

    - name: Generate organizational coverage report
      run: |
        python -c "
        import xml.etree.ElementTree as ET
        import json
        from datetime import datetime

        try:
            tree = ET.parse('coverage.xml')
            root = tree.getroot()
            line_rate = float(root.get('line-rate', 0))
            branch_rate = float(root.get('branch-rate', 0))

            coverage_data = {
                'project': 'pyOxide',
                'timestamp': datetime.now().isoformat(),
                'overall': {
                    'line_coverage': line_rate * 100,
                    'branch_coverage': branch_rate * 100
                },
                'status': 'excellent' if line_rate >= 0.9 else 'good' if line_rate >= 0.75 else 'fair' if line_rate >= 0.5 else 'poor',
                'python_version': '${{ matrix.python-version }}',
                'reports': {
                    'html': 'htmlcov/index.html',
                    'xml': 'coverage.xml'
                }
            }

            with open('coverage-report.json', 'w') as f:
                json.dump(coverage_data, f, indent=2)

            print(f'Coverage: {line_rate * 100:.1f}%')
        except Exception as e:
            print(f'Error: {e}')
        "

    - name: Generate coverage status
      run: |
        python scripts/coverage_status.py > coverage-status.txt
        cat coverage-status.txt

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Upload HTML coverage report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-html-${{ matrix.python-version }}
        path: htmlcov/
        retention-days: 30

    - name: Upload XML coverage report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-xml-${{ matrix.python-version }}
        path: coverage.xml
        retention-days: 30

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: pytest-results.xml
        retention-days: 30

    - name: Upload coverage status
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-status-${{ matrix.python-version }}
        path: coverage-status.txt
        retention-days: 30

    - name: Upload organizational coverage report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-org-report-${{ matrix.python-version }}
        path: coverage-report.json
        retention-days: 30

    - name: Comment coverage on PR
      uses: MishaKav/pytest-coverage-comment@main
      if: github.event_name == 'pull_request'
      with:
        pytest-xml-coverage-path: ./coverage.xml
        title: Coverage Report
        badge-title: Coverage
        hide-badge: false
        hide-report: false
        create-new-comment: false
        hide-comment: false
        report-only-changed-files: false
        junitxml-path: ./pytest-results.xml
