name: Publish Coverage Reports

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["Tests and Coverage"]
    types:
      - completed

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  publish-coverage:
    name: Publish Coverage to Pages
    runs-on: ubuntu-latest
    # Only run on successful test completion or direct push to main
    if: github.event_name == 'push' || github.event.workflow_run.conclusion == 'success'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run tests with coverage
      run: |
        pytest --cov=src --cov-report=html --cov-report=xml

    - name: Generate coverage status and badge
      run: |
        python scripts/coverage_status.py > coverage-status.txt
        python scripts/generate_badges.py

    - name: Create Pages content
      run: |
        mkdir -p public
        cp -r htmlcov/* public/
        
        # Create index page with project info
        cat > public/index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>pyOxide - Coverage Reports</title>
            <style>
                body { 
                    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Arial, sans-serif;
                    max-width: 1200px; 
                    margin: 0 auto; 
                    padding: 20px;
                    line-height: 1.6;
                }
                .header { 
                    text-align: center; 
                    margin-bottom: 2rem;
                    padding: 2rem;
                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                    color: white;
                    border-radius: 8px;
                }
                .stats {
                    display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                    gap: 1rem;
                    margin: 2rem 0;
                }
                .stat-card {
                    padding: 1.5rem;
                    background: #f8f9fa;
                    border-radius: 8px;
                    text-align: center;
                    border: 1px solid #e9ecef;
                }
                .stat-number { 
                    font-size: 2rem; 
                    font-weight: bold; 
                    color: #495057;
                }
                .links {
                    display: flex;
                    gap: 1rem;
                    justify-content: center;
                    flex-wrap: wrap;
                    margin: 2rem 0;
                }
                .btn {
                    display: inline-block;
                    padding: 12px 24px;
                    background: #007bff;
                    color: white;
                    text-decoration: none;
                    border-radius: 6px;
                    font-weight: 500;
                    transition: background-color 0.2s;
                }
                .btn:hover { background: #0056b3; }
                .btn-secondary { background: #6c757d; }
                .btn-secondary:hover { background: #545b62; }
                .footer {
                    margin-top: 3rem;
                    padding-top: 2rem;
                    border-top: 1px solid #e9ecef;
                    text-align: center;
                    color: #6c757d;
                }
            </style>
        </head>
        <body>
            <div class="header">
                <h1>ðŸš€ pyOxide Coverage Reports</h1>
                <p>Modern Python HTTP Server with Django Integration</p>
            </div>
            
            <div class="stats">
                <div class="stat-card">
                    <div class="stat-number" id="line-coverage">--%</div>
                    <div>Line Coverage</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="branch-coverage">--%</div>
                    <div>Branch Coverage</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="last-updated">---</div>
                    <div>Last Updated</div>
                </div>
            </div>
            
            <div class="links">
                <a href="./index.html" class="btn">ðŸ“Š Detailed Coverage Report</a>
                <a href="https://github.com/YOUR_ORG/pyOxide" class="btn btn-secondary">ðŸ“‚ Source Code</a>
                <a href="https://github.com/YOUR_ORG/pyOxide/actions" class="btn btn-secondary">ðŸ”„ CI/CD Status</a>
            </div>
            
            <div class="footer">
                <p>Generated automatically by GitHub Actions</p>
                <p>Coverage reports updated on every push to main branch</p>
            </div>
            
            <script>
                // Update stats from coverage data if available
                document.addEventListener('DOMContentLoaded', function() {
                    document.getElementById('last-updated').textContent = new Date().toLocaleDateString();
                });
            </script>
        </body>
        </html>
        EOF
        
        # Copy the original coverage report as the detailed view
        if [ -f htmlcov/index.html ]; then
            cp htmlcov/index.html public/coverage.html
            # Update the main index to link to coverage.html instead
            sed -i 's|href="./index.html"|href="./coverage.html"|g' public/index.html
        fi

    - name: Setup Pages
      uses: actions/configure-pages@v3

    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v2
      with:
        path: ./public

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Update README with coverage info
      if: github.ref == 'refs/heads/main'
      run: |
        # Extract coverage percentage for badge
        COVERAGE=$(python -c "
        import xml.etree.ElementTree as ET
        try:
            tree = ET.parse('coverage.xml')
            root = tree.getroot()
            coverage = float(root.get('line-rate', 0)) * 100
            print(f'{coverage:.0f}')
        except:
            print('0')
        ")
        
        echo "Coverage: ${COVERAGE}%"
        echo "Pages URL: ${{ steps.deployment.outputs.page_url }}"
